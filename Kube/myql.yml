#Create a PersistentVolume mysql-pv, its capacity should be 250Mi, set other parameters as per your preference
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  capacity:
    storage: 250Mi
  accessModes:
    - ReadWriteOnce
  storageClassName: manual
  hostPath: 
    path: /var/lib/mysql

#Create a PersistentVolumeClaim to request this PersistentVolume storage. Name it as mysql-pv-claim and 
#request a 250Mi of storage. 
#Set other parameters as per your preference.

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 250Mi
#Create a deployment named mysql-deployment, use any mysql image as per your preference.
# Mount the PersistentVolume at mount path /var/lib/mysql

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
  spec:
    containers:
    - name: mysql-container
      image: mysql:5.6
      volumeMounts:
      - name: db-data
        mountPath: /var/lib/mysql
      env:
      - name: MYSQL_ROOT_PASSWORD
        valueFrom: 
          secretKeyRef:
            name:  mysql-root-pass
            key: password
      - name: MYSQL_DATABASE
        valueFrom:
          secretKeyRef:
            name: mysql-db-url
            key: database
      - name: MYSQL_USER
        valueFrom:
          secretKeyRef:
            name:  mysql-user-pass
            key: username
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            name:  mysql-user-pass
            key: password      
#Create a NodePort type service named mysql and set nodePort to 30007
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql-app
spec:
  ports:
  type: NodePort
  - port: 3306
    nodePort: 3007

#Create a secret named mysql-root-pass having a key pair value, where key is password and its value is YUIidhb667, 
#create another secret named mysql-user-pass having some key pair values, where frist key is username and
#its value is kodekloud_tim, second key is password and value is Rc5C9EyvbU,
# create one more secret named mysql-db-url, key name is database and value is kodekloud_db5


apiVersion: v1
kind: Secret
metadata:
  name: mysql-root-pass
type: Opaque
data:
  password: YUIidhb667
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-user-pass
type: Opaque
  data:
  username: kodekloud_tim
  password: Rc5C9EyvbU
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-db-url
type: Opaque
data:
  password: kodekloud_db5

kubectl create secret generic mysql-root-pass --from-literal='password=YUIidhb667'
kubectl create secret generic mysql-user-pass --from-literal='username=kodekloud_tim' --from-literal='password=Rc5C9EyvbU'
kubectl create secret generic mysql-db-url --from-literal='database=kodekloud_db5'